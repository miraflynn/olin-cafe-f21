$date
	Thu Sep 30 16:51:31 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test_main $end
$scope module UUT $end
$var wire 2 ! buttons [1:0] $end
$var wire 1 " clk $end
$var wire 8 # rows [7:0] $end
$var wire 8 $ cols [7:0] $end
$var wire 100 % bordered_cells_q [99:0] $end
$var wire 100 & bordered_cells_d [99:0] $end
$var reg 100 ' bordered_cells_0 [99:0] $end
$var reg 64 ( cells_0 [63:0] $end
$var reg 64 ) cells_q [63:0] $end
$var reg 2 * display_counter [1:0] $end
$var reg 2 + game_counter [1:0] $end
$var reg 2 , leds [1:0] $end
$var reg 3 - rgb [2:0] $end
$var reg 1 . rst $end
$var reg 1 / rst_game $end
$var reg 1 0 step_game $end
$var reg 4 1 x [3:0] $end
$scope function cell_index $end
$var integer 32 2 i [31:0] $end
$var integer 32 3 j [31:0] $end
$upscope $end
$scope begin cells_x[0] $end
$scope begin cells_y[0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[1] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[2] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[3] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[4] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[5] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[6] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[7] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[8] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[9] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_x[1] $end
$scope begin cells_y[0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[1] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 4 neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 5 state_0 $end
$var reg 2 6 a1 [1:0] $end
$var reg 3 7 a2 [2:0] $end
$var reg 4 8 a3 [3:0] $end
$var reg 2 9 b1 [1:0] $end
$var reg 3 : b2 [2:0] $end
$var reg 2 ; c1 [1:0] $end
$var reg 2 < d1 [1:0] $end
$var reg 1 = state_d $end
$var reg 1 > state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[2] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 ? neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 @ state_0 $end
$var reg 2 A a1 [1:0] $end
$var reg 3 B a2 [2:0] $end
$var reg 4 C a3 [3:0] $end
$var reg 2 D b1 [1:0] $end
$var reg 3 E b2 [2:0] $end
$var reg 2 F c1 [1:0] $end
$var reg 2 G d1 [1:0] $end
$var reg 1 H state_d $end
$var reg 1 I state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[3] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 J neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 K state_0 $end
$var reg 2 L a1 [1:0] $end
$var reg 3 M a2 [2:0] $end
$var reg 4 N a3 [3:0] $end
$var reg 2 O b1 [1:0] $end
$var reg 3 P b2 [2:0] $end
$var reg 2 Q c1 [1:0] $end
$var reg 2 R d1 [1:0] $end
$var reg 1 S state_d $end
$var reg 1 T state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[4] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 U neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 V state_0 $end
$var reg 2 W a1 [1:0] $end
$var reg 3 X a2 [2:0] $end
$var reg 4 Y a3 [3:0] $end
$var reg 2 Z b1 [1:0] $end
$var reg 3 [ b2 [2:0] $end
$var reg 2 \ c1 [1:0] $end
$var reg 2 ] d1 [1:0] $end
$var reg 1 ^ state_d $end
$var reg 1 _ state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[5] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 ` neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 a state_0 $end
$var reg 2 b a1 [1:0] $end
$var reg 3 c a2 [2:0] $end
$var reg 4 d a3 [3:0] $end
$var reg 2 e b1 [1:0] $end
$var reg 3 f b2 [2:0] $end
$var reg 2 g c1 [1:0] $end
$var reg 2 h d1 [1:0] $end
$var reg 1 i state_d $end
$var reg 1 j state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[6] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 k neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 l state_0 $end
$var reg 2 m a1 [1:0] $end
$var reg 3 n a2 [2:0] $end
$var reg 4 o a3 [3:0] $end
$var reg 2 p b1 [1:0] $end
$var reg 3 q b2 [2:0] $end
$var reg 2 r c1 [1:0] $end
$var reg 2 s d1 [1:0] $end
$var reg 1 t state_d $end
$var reg 1 u state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[7] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 v neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 w state_0 $end
$var reg 2 x a1 [1:0] $end
$var reg 3 y a2 [2:0] $end
$var reg 4 z a3 [3:0] $end
$var reg 2 { b1 [1:0] $end
$var reg 3 | b2 [2:0] $end
$var reg 2 } c1 [1:0] $end
$var reg 2 ~ d1 [1:0] $end
$var reg 1 !" state_d $end
$var reg 1 "" state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[8] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 #" neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 $" state_0 $end
$var reg 2 %" a1 [1:0] $end
$var reg 3 &" a2 [2:0] $end
$var reg 4 '" a3 [3:0] $end
$var reg 2 (" b1 [1:0] $end
$var reg 3 )" b2 [2:0] $end
$var reg 2 *" c1 [1:0] $end
$var reg 2 +" d1 [1:0] $end
$var reg 1 ," state_d $end
$var reg 1 -" state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[9] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_x[2] $end
$scope begin cells_y[0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[1] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 ." neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 /" state_0 $end
$var reg 2 0" a1 [1:0] $end
$var reg 3 1" a2 [2:0] $end
$var reg 4 2" a3 [3:0] $end
$var reg 2 3" b1 [1:0] $end
$var reg 3 4" b2 [2:0] $end
$var reg 2 5" c1 [1:0] $end
$var reg 2 6" d1 [1:0] $end
$var reg 1 7" state_d $end
$var reg 1 8" state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[2] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 9" neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 :" state_0 $end
$var reg 2 ;" a1 [1:0] $end
$var reg 3 <" a2 [2:0] $end
$var reg 4 =" a3 [3:0] $end
$var reg 2 >" b1 [1:0] $end
$var reg 3 ?" b2 [2:0] $end
$var reg 2 @" c1 [1:0] $end
$var reg 2 A" d1 [1:0] $end
$var reg 1 B" state_d $end
$var reg 1 C" state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[3] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 D" neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 E" state_0 $end
$var reg 2 F" a1 [1:0] $end
$var reg 3 G" a2 [2:0] $end
$var reg 4 H" a3 [3:0] $end
$var reg 2 I" b1 [1:0] $end
$var reg 3 J" b2 [2:0] $end
$var reg 2 K" c1 [1:0] $end
$var reg 2 L" d1 [1:0] $end
$var reg 1 M" state_d $end
$var reg 1 N" state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[4] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 O" neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 P" state_0 $end
$var reg 2 Q" a1 [1:0] $end
$var reg 3 R" a2 [2:0] $end
$var reg 4 S" a3 [3:0] $end
$var reg 2 T" b1 [1:0] $end
$var reg 3 U" b2 [2:0] $end
$var reg 2 V" c1 [1:0] $end
$var reg 2 W" d1 [1:0] $end
$var reg 1 X" state_d $end
$var reg 1 Y" state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[5] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 Z" neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 [" state_0 $end
$var reg 2 \" a1 [1:0] $end
$var reg 3 ]" a2 [2:0] $end
$var reg 4 ^" a3 [3:0] $end
$var reg 2 _" b1 [1:0] $end
$var reg 3 `" b2 [2:0] $end
$var reg 2 a" c1 [1:0] $end
$var reg 2 b" d1 [1:0] $end
$var reg 1 c" state_d $end
$var reg 1 d" state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[6] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 e" neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 f" state_0 $end
$var reg 2 g" a1 [1:0] $end
$var reg 3 h" a2 [2:0] $end
$var reg 4 i" a3 [3:0] $end
$var reg 2 j" b1 [1:0] $end
$var reg 3 k" b2 [2:0] $end
$var reg 2 l" c1 [1:0] $end
$var reg 2 m" d1 [1:0] $end
$var reg 1 n" state_d $end
$var reg 1 o" state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[7] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 p" neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 q" state_0 $end
$var reg 2 r" a1 [1:0] $end
$var reg 3 s" a2 [2:0] $end
$var reg 4 t" a3 [3:0] $end
$var reg 2 u" b1 [1:0] $end
$var reg 3 v" b2 [2:0] $end
$var reg 2 w" c1 [1:0] $end
$var reg 2 x" d1 [1:0] $end
$var reg 1 y" state_d $end
$var reg 1 z" state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[8] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 {" neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 |" state_0 $end
$var reg 2 }" a1 [1:0] $end
$var reg 3 ~" a2 [2:0] $end
$var reg 4 !# a3 [3:0] $end
$var reg 2 "# b1 [1:0] $end
$var reg 3 ## b2 [2:0] $end
$var reg 2 $# c1 [1:0] $end
$var reg 2 %# d1 [1:0] $end
$var reg 1 &# state_d $end
$var reg 1 '# state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[9] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_x[3] $end
$scope begin cells_y[0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[1] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 (# neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 )# state_0 $end
$var reg 2 *# a1 [1:0] $end
$var reg 3 +# a2 [2:0] $end
$var reg 4 ,# a3 [3:0] $end
$var reg 2 -# b1 [1:0] $end
$var reg 3 .# b2 [2:0] $end
$var reg 2 /# c1 [1:0] $end
$var reg 2 0# d1 [1:0] $end
$var reg 1 1# state_d $end
$var reg 1 2# state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[2] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 3# neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 4# state_0 $end
$var reg 2 5# a1 [1:0] $end
$var reg 3 6# a2 [2:0] $end
$var reg 4 7# a3 [3:0] $end
$var reg 2 8# b1 [1:0] $end
$var reg 3 9# b2 [2:0] $end
$var reg 2 :# c1 [1:0] $end
$var reg 2 ;# d1 [1:0] $end
$var reg 1 <# state_d $end
$var reg 1 =# state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[3] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 ># neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 ?# state_0 $end
$var reg 2 @# a1 [1:0] $end
$var reg 3 A# a2 [2:0] $end
$var reg 4 B# a3 [3:0] $end
$var reg 2 C# b1 [1:0] $end
$var reg 3 D# b2 [2:0] $end
$var reg 2 E# c1 [1:0] $end
$var reg 2 F# d1 [1:0] $end
$var reg 1 G# state_d $end
$var reg 1 H# state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[4] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 I# neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 J# state_0 $end
$var reg 2 K# a1 [1:0] $end
$var reg 3 L# a2 [2:0] $end
$var reg 4 M# a3 [3:0] $end
$var reg 2 N# b1 [1:0] $end
$var reg 3 O# b2 [2:0] $end
$var reg 2 P# c1 [1:0] $end
$var reg 2 Q# d1 [1:0] $end
$var reg 1 R# state_d $end
$var reg 1 S# state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[5] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 T# neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 U# state_0 $end
$var reg 2 V# a1 [1:0] $end
$var reg 3 W# a2 [2:0] $end
$var reg 4 X# a3 [3:0] $end
$var reg 2 Y# b1 [1:0] $end
$var reg 3 Z# b2 [2:0] $end
$var reg 2 [# c1 [1:0] $end
$var reg 2 \# d1 [1:0] $end
$var reg 1 ]# state_d $end
$var reg 1 ^# state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[6] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 _# neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 `# state_0 $end
$var reg 2 a# a1 [1:0] $end
$var reg 3 b# a2 [2:0] $end
$var reg 4 c# a3 [3:0] $end
$var reg 2 d# b1 [1:0] $end
$var reg 3 e# b2 [2:0] $end
$var reg 2 f# c1 [1:0] $end
$var reg 2 g# d1 [1:0] $end
$var reg 1 h# state_d $end
$var reg 1 i# state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[7] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 j# neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 k# state_0 $end
$var reg 2 l# a1 [1:0] $end
$var reg 3 m# a2 [2:0] $end
$var reg 4 n# a3 [3:0] $end
$var reg 2 o# b1 [1:0] $end
$var reg 3 p# b2 [2:0] $end
$var reg 2 q# c1 [1:0] $end
$var reg 2 r# d1 [1:0] $end
$var reg 1 s# state_d $end
$var reg 1 t# state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[8] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 u# neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 v# state_0 $end
$var reg 2 w# a1 [1:0] $end
$var reg 3 x# a2 [2:0] $end
$var reg 4 y# a3 [3:0] $end
$var reg 2 z# b1 [1:0] $end
$var reg 3 {# b2 [2:0] $end
$var reg 2 |# c1 [1:0] $end
$var reg 2 }# d1 [1:0] $end
$var reg 1 ~# state_d $end
$var reg 1 !$ state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[9] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_x[4] $end
$scope begin cells_y[0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[1] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 "$ neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 #$ state_0 $end
$var reg 2 $$ a1 [1:0] $end
$var reg 3 %$ a2 [2:0] $end
$var reg 4 &$ a3 [3:0] $end
$var reg 2 '$ b1 [1:0] $end
$var reg 3 ($ b2 [2:0] $end
$var reg 2 )$ c1 [1:0] $end
$var reg 2 *$ d1 [1:0] $end
$var reg 1 +$ state_d $end
$var reg 1 ,$ state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[2] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 -$ neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 .$ state_0 $end
$var reg 2 /$ a1 [1:0] $end
$var reg 3 0$ a2 [2:0] $end
$var reg 4 1$ a3 [3:0] $end
$var reg 2 2$ b1 [1:0] $end
$var reg 3 3$ b2 [2:0] $end
$var reg 2 4$ c1 [1:0] $end
$var reg 2 5$ d1 [1:0] $end
$var reg 1 6$ state_d $end
$var reg 1 7$ state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[3] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 8$ neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 9$ state_0 $end
$var reg 2 :$ a1 [1:0] $end
$var reg 3 ;$ a2 [2:0] $end
$var reg 4 <$ a3 [3:0] $end
$var reg 2 =$ b1 [1:0] $end
$var reg 3 >$ b2 [2:0] $end
$var reg 2 ?$ c1 [1:0] $end
$var reg 2 @$ d1 [1:0] $end
$var reg 1 A$ state_d $end
$var reg 1 B$ state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[4] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 C$ neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 D$ state_0 $end
$var reg 2 E$ a1 [1:0] $end
$var reg 3 F$ a2 [2:0] $end
$var reg 4 G$ a3 [3:0] $end
$var reg 2 H$ b1 [1:0] $end
$var reg 3 I$ b2 [2:0] $end
$var reg 2 J$ c1 [1:0] $end
$var reg 2 K$ d1 [1:0] $end
$var reg 1 L$ state_d $end
$var reg 1 M$ state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[5] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 N$ neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 O$ state_0 $end
$var reg 2 P$ a1 [1:0] $end
$var reg 3 Q$ a2 [2:0] $end
$var reg 4 R$ a3 [3:0] $end
$var reg 2 S$ b1 [1:0] $end
$var reg 3 T$ b2 [2:0] $end
$var reg 2 U$ c1 [1:0] $end
$var reg 2 V$ d1 [1:0] $end
$var reg 1 W$ state_d $end
$var reg 1 X$ state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[6] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 Y$ neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 Z$ state_0 $end
$var reg 2 [$ a1 [1:0] $end
$var reg 3 \$ a2 [2:0] $end
$var reg 4 ]$ a3 [3:0] $end
$var reg 2 ^$ b1 [1:0] $end
$var reg 3 _$ b2 [2:0] $end
$var reg 2 `$ c1 [1:0] $end
$var reg 2 a$ d1 [1:0] $end
$var reg 1 b$ state_d $end
$var reg 1 c$ state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[7] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 d$ neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 e$ state_0 $end
$var reg 2 f$ a1 [1:0] $end
$var reg 3 g$ a2 [2:0] $end
$var reg 4 h$ a3 [3:0] $end
$var reg 2 i$ b1 [1:0] $end
$var reg 3 j$ b2 [2:0] $end
$var reg 2 k$ c1 [1:0] $end
$var reg 2 l$ d1 [1:0] $end
$var reg 1 m$ state_d $end
$var reg 1 n$ state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[8] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 o$ neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 p$ state_0 $end
$var reg 2 q$ a1 [1:0] $end
$var reg 3 r$ a2 [2:0] $end
$var reg 4 s$ a3 [3:0] $end
$var reg 2 t$ b1 [1:0] $end
$var reg 3 u$ b2 [2:0] $end
$var reg 2 v$ c1 [1:0] $end
$var reg 2 w$ d1 [1:0] $end
$var reg 1 x$ state_d $end
$var reg 1 y$ state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[9] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_x[5] $end
$scope begin cells_y[0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[1] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 z$ neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 {$ state_0 $end
$var reg 2 |$ a1 [1:0] $end
$var reg 3 }$ a2 [2:0] $end
$var reg 4 ~$ a3 [3:0] $end
$var reg 2 !% b1 [1:0] $end
$var reg 3 "% b2 [2:0] $end
$var reg 2 #% c1 [1:0] $end
$var reg 2 $% d1 [1:0] $end
$var reg 1 %% state_d $end
$var reg 1 &% state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[2] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 '% neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 (% state_0 $end
$var reg 2 )% a1 [1:0] $end
$var reg 3 *% a2 [2:0] $end
$var reg 4 +% a3 [3:0] $end
$var reg 2 ,% b1 [1:0] $end
$var reg 3 -% b2 [2:0] $end
$var reg 2 .% c1 [1:0] $end
$var reg 2 /% d1 [1:0] $end
$var reg 1 0% state_d $end
$var reg 1 1% state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[3] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 2% neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 3% state_0 $end
$var reg 2 4% a1 [1:0] $end
$var reg 3 5% a2 [2:0] $end
$var reg 4 6% a3 [3:0] $end
$var reg 2 7% b1 [1:0] $end
$var reg 3 8% b2 [2:0] $end
$var reg 2 9% c1 [1:0] $end
$var reg 2 :% d1 [1:0] $end
$var reg 1 ;% state_d $end
$var reg 1 <% state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[4] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 =% neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 >% state_0 $end
$var reg 2 ?% a1 [1:0] $end
$var reg 3 @% a2 [2:0] $end
$var reg 4 A% a3 [3:0] $end
$var reg 2 B% b1 [1:0] $end
$var reg 3 C% b2 [2:0] $end
$var reg 2 D% c1 [1:0] $end
$var reg 2 E% d1 [1:0] $end
$var reg 1 F% state_d $end
$var reg 1 G% state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[5] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 H% neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 I% state_0 $end
$var reg 2 J% a1 [1:0] $end
$var reg 3 K% a2 [2:0] $end
$var reg 4 L% a3 [3:0] $end
$var reg 2 M% b1 [1:0] $end
$var reg 3 N% b2 [2:0] $end
$var reg 2 O% c1 [1:0] $end
$var reg 2 P% d1 [1:0] $end
$var reg 1 Q% state_d $end
$var reg 1 R% state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[6] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 S% neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 T% state_0 $end
$var reg 2 U% a1 [1:0] $end
$var reg 3 V% a2 [2:0] $end
$var reg 4 W% a3 [3:0] $end
$var reg 2 X% b1 [1:0] $end
$var reg 3 Y% b2 [2:0] $end
$var reg 2 Z% c1 [1:0] $end
$var reg 2 [% d1 [1:0] $end
$var reg 1 \% state_d $end
$var reg 1 ]% state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[7] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 ^% neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 _% state_0 $end
$var reg 2 `% a1 [1:0] $end
$var reg 3 a% a2 [2:0] $end
$var reg 4 b% a3 [3:0] $end
$var reg 2 c% b1 [1:0] $end
$var reg 3 d% b2 [2:0] $end
$var reg 2 e% c1 [1:0] $end
$var reg 2 f% d1 [1:0] $end
$var reg 1 g% state_d $end
$var reg 1 h% state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[8] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 i% neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 j% state_0 $end
$var reg 2 k% a1 [1:0] $end
$var reg 3 l% a2 [2:0] $end
$var reg 4 m% a3 [3:0] $end
$var reg 2 n% b1 [1:0] $end
$var reg 3 o% b2 [2:0] $end
$var reg 2 p% c1 [1:0] $end
$var reg 2 q% d1 [1:0] $end
$var reg 1 r% state_d $end
$var reg 1 s% state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[9] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_x[6] $end
$scope begin cells_y[0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[1] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 t% neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 u% state_0 $end
$var reg 2 v% a1 [1:0] $end
$var reg 3 w% a2 [2:0] $end
$var reg 4 x% a3 [3:0] $end
$var reg 2 y% b1 [1:0] $end
$var reg 3 z% b2 [2:0] $end
$var reg 2 {% c1 [1:0] $end
$var reg 2 |% d1 [1:0] $end
$var reg 1 }% state_d $end
$var reg 1 ~% state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[2] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 !& neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 "& state_0 $end
$var reg 2 #& a1 [1:0] $end
$var reg 3 $& a2 [2:0] $end
$var reg 4 %& a3 [3:0] $end
$var reg 2 && b1 [1:0] $end
$var reg 3 '& b2 [2:0] $end
$var reg 2 (& c1 [1:0] $end
$var reg 2 )& d1 [1:0] $end
$var reg 1 *& state_d $end
$var reg 1 +& state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[3] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 ,& neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 -& state_0 $end
$var reg 2 .& a1 [1:0] $end
$var reg 3 /& a2 [2:0] $end
$var reg 4 0& a3 [3:0] $end
$var reg 2 1& b1 [1:0] $end
$var reg 3 2& b2 [2:0] $end
$var reg 2 3& c1 [1:0] $end
$var reg 2 4& d1 [1:0] $end
$var reg 1 5& state_d $end
$var reg 1 6& state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[4] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 7& neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 8& state_0 $end
$var reg 2 9& a1 [1:0] $end
$var reg 3 :& a2 [2:0] $end
$var reg 4 ;& a3 [3:0] $end
$var reg 2 <& b1 [1:0] $end
$var reg 3 =& b2 [2:0] $end
$var reg 2 >& c1 [1:0] $end
$var reg 2 ?& d1 [1:0] $end
$var reg 1 @& state_d $end
$var reg 1 A& state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[5] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 B& neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 C& state_0 $end
$var reg 2 D& a1 [1:0] $end
$var reg 3 E& a2 [2:0] $end
$var reg 4 F& a3 [3:0] $end
$var reg 2 G& b1 [1:0] $end
$var reg 3 H& b2 [2:0] $end
$var reg 2 I& c1 [1:0] $end
$var reg 2 J& d1 [1:0] $end
$var reg 1 K& state_d $end
$var reg 1 L& state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[6] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 M& neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 N& state_0 $end
$var reg 2 O& a1 [1:0] $end
$var reg 3 P& a2 [2:0] $end
$var reg 4 Q& a3 [3:0] $end
$var reg 2 R& b1 [1:0] $end
$var reg 3 S& b2 [2:0] $end
$var reg 2 T& c1 [1:0] $end
$var reg 2 U& d1 [1:0] $end
$var reg 1 V& state_d $end
$var reg 1 W& state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[7] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 X& neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 Y& state_0 $end
$var reg 2 Z& a1 [1:0] $end
$var reg 3 [& a2 [2:0] $end
$var reg 4 \& a3 [3:0] $end
$var reg 2 ]& b1 [1:0] $end
$var reg 3 ^& b2 [2:0] $end
$var reg 2 _& c1 [1:0] $end
$var reg 2 `& d1 [1:0] $end
$var reg 1 a& state_d $end
$var reg 1 b& state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[8] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 c& neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 d& state_0 $end
$var reg 2 e& a1 [1:0] $end
$var reg 3 f& a2 [2:0] $end
$var reg 4 g& a3 [3:0] $end
$var reg 2 h& b1 [1:0] $end
$var reg 3 i& b2 [2:0] $end
$var reg 2 j& c1 [1:0] $end
$var reg 2 k& d1 [1:0] $end
$var reg 1 l& state_d $end
$var reg 1 m& state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[9] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_x[7] $end
$scope begin cells_y[0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[1] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 n& neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 o& state_0 $end
$var reg 2 p& a1 [1:0] $end
$var reg 3 q& a2 [2:0] $end
$var reg 4 r& a3 [3:0] $end
$var reg 2 s& b1 [1:0] $end
$var reg 3 t& b2 [2:0] $end
$var reg 2 u& c1 [1:0] $end
$var reg 2 v& d1 [1:0] $end
$var reg 1 w& state_d $end
$var reg 1 x& state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[2] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 y& neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 z& state_0 $end
$var reg 2 {& a1 [1:0] $end
$var reg 3 |& a2 [2:0] $end
$var reg 4 }& a3 [3:0] $end
$var reg 2 ~& b1 [1:0] $end
$var reg 3 !' b2 [2:0] $end
$var reg 2 "' c1 [1:0] $end
$var reg 2 #' d1 [1:0] $end
$var reg 1 $' state_d $end
$var reg 1 %' state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[3] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 &' neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 '' state_0 $end
$var reg 2 (' a1 [1:0] $end
$var reg 3 )' a2 [2:0] $end
$var reg 4 *' a3 [3:0] $end
$var reg 2 +' b1 [1:0] $end
$var reg 3 ,' b2 [2:0] $end
$var reg 2 -' c1 [1:0] $end
$var reg 2 .' d1 [1:0] $end
$var reg 1 /' state_d $end
$var reg 1 0' state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[4] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 1' neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 2' state_0 $end
$var reg 2 3' a1 [1:0] $end
$var reg 3 4' a2 [2:0] $end
$var reg 4 5' a3 [3:0] $end
$var reg 2 6' b1 [1:0] $end
$var reg 3 7' b2 [2:0] $end
$var reg 2 8' c1 [1:0] $end
$var reg 2 9' d1 [1:0] $end
$var reg 1 :' state_d $end
$var reg 1 ;' state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[5] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 <' neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 =' state_0 $end
$var reg 2 >' a1 [1:0] $end
$var reg 3 ?' a2 [2:0] $end
$var reg 4 @' a3 [3:0] $end
$var reg 2 A' b1 [1:0] $end
$var reg 3 B' b2 [2:0] $end
$var reg 2 C' c1 [1:0] $end
$var reg 2 D' d1 [1:0] $end
$var reg 1 E' state_d $end
$var reg 1 F' state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[6] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 G' neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 H' state_0 $end
$var reg 2 I' a1 [1:0] $end
$var reg 3 J' a2 [2:0] $end
$var reg 4 K' a3 [3:0] $end
$var reg 2 L' b1 [1:0] $end
$var reg 3 M' b2 [2:0] $end
$var reg 2 N' c1 [1:0] $end
$var reg 2 O' d1 [1:0] $end
$var reg 1 P' state_d $end
$var reg 1 Q' state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[7] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 R' neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 S' state_0 $end
$var reg 2 T' a1 [1:0] $end
$var reg 3 U' a2 [2:0] $end
$var reg 4 V' a3 [3:0] $end
$var reg 2 W' b1 [1:0] $end
$var reg 3 X' b2 [2:0] $end
$var reg 2 Y' c1 [1:0] $end
$var reg 2 Z' d1 [1:0] $end
$var reg 1 [' state_d $end
$var reg 1 \' state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[8] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 ]' neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 ^' state_0 $end
$var reg 2 _' a1 [1:0] $end
$var reg 3 `' a2 [2:0] $end
$var reg 4 a' a3 [3:0] $end
$var reg 2 b' b1 [1:0] $end
$var reg 3 c' b2 [2:0] $end
$var reg 2 d' c1 [1:0] $end
$var reg 2 e' d1 [1:0] $end
$var reg 1 f' state_d $end
$var reg 1 g' state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[9] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_x[8] $end
$scope begin cells_y[0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[1] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 h' neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 i' state_0 $end
$var reg 2 j' a1 [1:0] $end
$var reg 3 k' a2 [2:0] $end
$var reg 4 l' a3 [3:0] $end
$var reg 2 m' b1 [1:0] $end
$var reg 3 n' b2 [2:0] $end
$var reg 2 o' c1 [1:0] $end
$var reg 2 p' d1 [1:0] $end
$var reg 1 q' state_d $end
$var reg 1 r' state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[2] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 s' neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 t' state_0 $end
$var reg 2 u' a1 [1:0] $end
$var reg 3 v' a2 [2:0] $end
$var reg 4 w' a3 [3:0] $end
$var reg 2 x' b1 [1:0] $end
$var reg 3 y' b2 [2:0] $end
$var reg 2 z' c1 [1:0] $end
$var reg 2 {' d1 [1:0] $end
$var reg 1 |' state_d $end
$var reg 1 }' state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[3] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 ~' neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 !( state_0 $end
$var reg 2 "( a1 [1:0] $end
$var reg 3 #( a2 [2:0] $end
$var reg 4 $( a3 [3:0] $end
$var reg 2 %( b1 [1:0] $end
$var reg 3 &( b2 [2:0] $end
$var reg 2 '( c1 [1:0] $end
$var reg 2 (( d1 [1:0] $end
$var reg 1 )( state_d $end
$var reg 1 *( state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[4] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 +( neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 ,( state_0 $end
$var reg 2 -( a1 [1:0] $end
$var reg 3 .( a2 [2:0] $end
$var reg 4 /( a3 [3:0] $end
$var reg 2 0( b1 [1:0] $end
$var reg 3 1( b2 [2:0] $end
$var reg 2 2( c1 [1:0] $end
$var reg 2 3( d1 [1:0] $end
$var reg 1 4( state_d $end
$var reg 1 5( state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[5] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 6( neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 7( state_0 $end
$var reg 2 8( a1 [1:0] $end
$var reg 3 9( a2 [2:0] $end
$var reg 4 :( a3 [3:0] $end
$var reg 2 ;( b1 [1:0] $end
$var reg 3 <( b2 [2:0] $end
$var reg 2 =( c1 [1:0] $end
$var reg 2 >( d1 [1:0] $end
$var reg 1 ?( state_d $end
$var reg 1 @( state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[6] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 A( neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 B( state_0 $end
$var reg 2 C( a1 [1:0] $end
$var reg 3 D( a2 [2:0] $end
$var reg 4 E( a3 [3:0] $end
$var reg 2 F( b1 [1:0] $end
$var reg 3 G( b2 [2:0] $end
$var reg 2 H( c1 [1:0] $end
$var reg 2 I( d1 [1:0] $end
$var reg 1 J( state_d $end
$var reg 1 K( state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[7] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 L( neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 M( state_0 $end
$var reg 2 N( a1 [1:0] $end
$var reg 3 O( a2 [2:0] $end
$var reg 4 P( a3 [3:0] $end
$var reg 2 Q( b1 [1:0] $end
$var reg 3 R( b2 [2:0] $end
$var reg 2 S( c1 [1:0] $end
$var reg 2 T( d1 [1:0] $end
$var reg 1 U( state_d $end
$var reg 1 V( state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[8] $end
$scope begin genblk1 $end
$scope module CELL $end
$var wire 1 " clk $end
$var wire 1 0 ena $end
$var wire 8 W( neighbors [7:0] $end
$var wire 1 / rst $end
$var wire 1 X( state_0 $end
$var reg 2 Y( a1 [1:0] $end
$var reg 3 Z( a2 [2:0] $end
$var reg 4 [( a3 [3:0] $end
$var reg 2 \( b1 [1:0] $end
$var reg 3 ]( b2 [2:0] $end
$var reg 2 ^( c1 [1:0] $end
$var reg 2 _( d1 [1:0] $end
$var reg 1 `( state_d $end
$var reg 1 a( state_q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_y[9] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin cells_x[9] $end
$scope begin cells_y[0] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[1] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[2] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[3] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[4] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[5] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[6] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[7] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[8] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$scope begin cells_y[9] $end
$scope begin genblk1 $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk2[0] $end
$upscope $end
$scope begin genblk2[1] $end
$upscope $end
$scope begin genblk2[2] $end
$upscope $end
$scope begin genblk2[3] $end
$upscope $end
$scope begin genblk2[4] $end
$upscope $end
$scope begin genblk2[5] $end
$upscope $end
$scope begin genblk2[6] $end
$upscope $end
$scope begin genblk2[7] $end
$upscope $end
$scope module LED_DRIVER $end
$var wire 64 b( cells [63:0] $end
$var wire 1 c( ena $end
$var wire 4 d( x [3:0] $end
$var wire 8 e( x_decoded [7:0] $end
$var reg 8 f( cols [7:0] $end
$var reg 8 g( rows [7:0] $end
$scope module COL_DECODER $end
$var wire 1 c( ena $end
$var wire 3 h( in [2:0] $end
$var reg 8 i( out [7:0] $end
$upscope $end
$upscope $end
$scope begin clocks_and_dividers $end
$upscope $end
$scope begin io_logic $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx i(
bx h(
bx g(
bx f(
bx e(
bx d(
1c(
bx b(
xa(
x`(
bx _(
b0 ^(
b0xx ](
b0 \(
b0xx [(
b0x Z(
b0x Y(
0X(
bx00000x W(
xV(
xU(
bx T(
bx S(
bx R(
b0 Q(
b0xxx P(
b0x O(
b0x N(
0M(
bx000x L(
xK(
xJ(
bx I(
bx H(
bx G(
b0 F(
b0xxx E(
b0x D(
b0x C(
0B(
bx000x A(
x@(
x?(
bx >(
bx =(
bx <(
b0 ;(
b0xxx :(
b0x 9(
b0x 8(
07(
bx000x 6(
x5(
x4(
bx 3(
bx 2(
bx 1(
b0 0(
b0xxx /(
b0x .(
b0x -(
0,(
bx000x +(
x*(
x)(
bx ((
bx '(
bx &(
b0 %(
b0xxx $(
b0x #(
b0x "(
0!(
bx000x ~'
x}'
x|'
bx {'
bx z'
bx y'
b0 x'
b0xxx w'
b0x v'
b0x u'
0t'
bx000x s'
xr'
xq'
b0x p'
bx o'
b0xx n'
b0 m'
b0xx l'
b0 k'
b0 j'
0i'
b0xxx0000 h'
xg'
xf'
bx e'
b0 d'
b0xx c'
b0x b'
b0xxx a'
b0xx `'
bx _'
0^'
bx000xxx ]'
x\'
x['
bx Z'
bx Y'
bx X'
bx W'
bx V'
bx U'
bx T'
0S'
bx R'
xQ'
xP'
bx O'
bx N'
bx M'
bx L'
bx K'
bx J'
bx I'
1H'
bx G'
xF'
xE'
bx D'
bx C'
bx B'
bx A'
bx @'
bx ?'
bx >'
0='
bx <'
x;'
x:'
bx 9'
bx 8'
bx 7'
bx 6'
bx 5'
bx 4'
bx 3'
02'
bx 1'
x0'
x/'
bx .'
bx -'
bx ,'
bx +'
bx *'
bx )'
bx ('
0''
bx &'
x%'
x$'
bx #'
bx "'
bx !'
bx ~&
bx }&
bx |&
bx {&
0z&
bx y&
xx&
xw&
b0x v&
bx u&
b0xx t&
bx s&
b0xxx r&
b0xx q&
b0 p&
0o&
b0xxxxx00 n&
xm&
xl&
bx k&
b0 j&
b0xx i&
b0x h&
b0xxx g&
b0xx f&
bx e&
1d&
bx000xxx c&
xb&
xa&
bx `&
bx _&
bx ^&
bx ]&
bx \&
bx [&
bx Z&
0Y&
bx X&
xW&
xV&
bx U&
bx T&
bx S&
bx R&
bx Q&
bx P&
bx O&
1N&
bx M&
xL&
xK&
bx J&
bx I&
bx H&
bx G&
bx F&
bx E&
bx D&
0C&
bx B&
xA&
x@&
bx ?&
bx >&
bx =&
bx <&
bx ;&
bx :&
bx 9&
08&
bx 7&
x6&
x5&
bx 4&
bx 3&
bx 2&
bx 1&
bx 0&
bx /&
bx .&
0-&
bx ,&
x+&
x*&
bx )&
bx (&
bx '&
bx &&
bx %&
bx $&
bx #&
0"&
bx !&
x~%
x}%
b0x |%
bx {%
b0xx z%
bx y%
b0xxx x%
b0xx w%
b0 v%
0u%
b0xxxxx00 t%
xs%
xr%
bx q%
b0 p%
b0xx o%
b0x n%
b0xxx m%
b0xx l%
bx k%
0j%
bx000xxx i%
xh%
xg%
bx f%
bx e%
bx d%
bx c%
bx b%
bx a%
bx `%
1_%
bx ^%
x]%
x\%
bx [%
bx Z%
bx Y%
bx X%
bx W%
bx V%
bx U%
1T%
bx S%
xR%
xQ%
bx P%
bx O%
bx N%
bx M%
bx L%
bx K%
bx J%
0I%
bx H%
xG%
xF%
bx E%
bx D%
bx C%
bx B%
bx A%
bx @%
bx ?%
0>%
bx =%
x<%
x;%
bx :%
bx 9%
bx 8%
bx 7%
bx 6%
bx 5%
bx 4%
03%
bx 2%
x1%
x0%
bx /%
bx .%
bx -%
bx ,%
bx +%
bx *%
bx )%
0(%
bx '%
x&%
x%%
b0x $%
bx #%
b0xx "%
bx !%
b0xxx ~$
b0xx }$
b0 |$
0{$
b0xxxxx00 z$
xy$
xx$
bx w$
b0 v$
b0xx u$
b0x t$
b0xxx s$
b0xx r$
bx q$
0p$
bx000xxx o$
xn$
xm$
bx l$
bx k$
bx j$
bx i$
bx h$
bx g$
bx f$
0e$
bx d$
xc$
xb$
bx a$
bx `$
bx _$
bx ^$
bx ]$
bx \$
bx [$
0Z$
bx Y$
xX$
xW$
bx V$
bx U$
bx T$
bx S$
bx R$
bx Q$
bx P$
0O$
bx N$
xM$
xL$
bx K$
bx J$
bx I$
bx H$
bx G$
bx F$
bx E$
0D$
bx C$
xB$
xA$
bx @$
bx ?$
bx >$
bx =$
bx <$
bx ;$
bx :$
09$
bx 8$
x7$
x6$
bx 5$
bx 4$
bx 3$
bx 2$
bx 1$
bx 0$
bx /$
0.$
bx -$
x,$
x+$
b0x *$
bx )$
b0xx ($
bx '$
b0xxx &$
b0xx %$
b0 $$
0#$
b0xxxxx00 "$
x!$
x~#
bx }#
b0 |#
b0xx {#
b0x z#
b0xxx y#
b0xx x#
bx w#
0v#
bx000xxx u#
xt#
xs#
bx r#
bx q#
bx p#
bx o#
bx n#
bx m#
bx l#
0k#
bx j#
xi#
xh#
bx g#
bx f#
bx e#
bx d#
bx c#
bx b#
bx a#
0`#
bx _#
x^#
x]#
bx \#
bx [#
bx Z#
bx Y#
bx X#
bx W#
bx V#
0U#
bx T#
xS#
xR#
bx Q#
bx P#
bx O#
bx N#
bx M#
bx L#
bx K#
0J#
bx I#
xH#
xG#
bx F#
bx E#
bx D#
bx C#
bx B#
bx A#
bx @#
0?#
bx >#
x=#
x<#
bx ;#
bx :#
bx 9#
bx 8#
bx 7#
bx 6#
bx 5#
04#
bx 3#
x2#
x1#
b0x 0#
bx /#
b0xx .#
bx -#
b0xxx ,#
b0xx +#
b0 *#
0)#
b0xxxxx00 (#
x'#
x&#
bx %#
b0 $#
b0xx ##
b0x "#
b0xxx !#
b0xx ~"
bx }"
0|"
bx000xxx {"
xz"
xy"
bx x"
bx w"
bx v"
bx u"
bx t"
bx s"
bx r"
0q"
bx p"
xo"
xn"
bx m"
bx l"
bx k"
bx j"
bx i"
bx h"
bx g"
0f"
bx e"
xd"
xc"
bx b"
bx a"
bx `"
bx _"
bx ^"
bx ]"
bx \"
0["
bx Z"
xY"
xX"
bx W"
bx V"
bx U"
bx T"
bx S"
bx R"
bx Q"
0P"
bx O"
xN"
xM"
bx L"
bx K"
bx J"
bx I"
bx H"
bx G"
bx F"
0E"
bx D"
xC"
xB"
bx A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
0:"
bx 9"
x8"
x7"
b0x 6"
bx 5"
b0xx 4"
bx 3"
b0xxx 2"
b0xx 1"
b0 0"
0/"
b0xxxxx00 ."
x-"
x,"
b0 +"
b0 *"
b0 )"
b0x ("
b0xx '"
b0xx &"
bx %"
0$"
b0xxx #"
x""
x!"
b0 ~
b0x }
b0x |
bx {
b0xxx z
bx y
bx x
0w
b0xxxxx v
xu
xt
b0 s
b0x r
b0x q
bx p
b0xxx o
bx n
bx m
0l
b0xxxxx k
xj
xi
b0 h
b0x g
b0x f
bx e
b0xxx d
bx c
bx b
0a
b0xxxxx `
x_
x^
b0 ]
b0x \
b0x [
bx Z
b0xxx Y
bx X
bx W
0V
b0xxxxx U
xT
xS
b0 R
b0x Q
b0x P
bx O
b0xxx N
bx M
bx L
0K
b0xxxxx J
xI
xH
b0 G
b0x F
b0x E
bx D
b0xxx C
bx B
bx A
0@
b0xxxxx ?
x>
x=
b0 <
b0x ;
b0x :
bx 9
b0xx 8
b0xx 7
b0 6
05
b0xxx00 4
b1001 3
b1001 2
bx 1
x0
1/
1.
b11 -
b10 ,
bx +
bx *
bx )
b10000000010000011100000000000000000000000000000000000000000000 (
b100000000001000000011100000000000000000000000000000000000000000000000000000000000000000 '
b0xxxxxxxx00xxxxxxxx00xxxxxxxx00xxxxxxxx00xxxxxxxx00xxxxxxxx00xxxxxxxx00xxxxxxxx00000000000 &
b0xxxxxxxx00xxxxxxxx00xxxxxxxx00xxxxxxxx00xxxxxxxx00xxxxxxxx00xxxxxxxx00xxxxxxxx00000000000 %
bx $
bx #
0"
b11 !
$end
#5000
b1 e(
b1 i(
b0 h(
00
b0 1
b0 d(
b0 *
b0 +
1"
#10000
0"
#15000
0/
b111 -
b0 ,
0.
b0 !
1"
#20000
0"
#25000
b1 *
b1 +
1"
#30000
0"
#35000
10
b10 *
b10 +
1"
#40000
0"
#45000
b10 e(
b10 i(
b1 h(
00
b1 1
b1 d(
b0 *
b0 +
1"
#50000
0"
#55000
b1 *
b1 +
1"
#60000
0"
#65000
10
b10 *
b10 +
1"
#70000
0"
#75000
b100 e(
b100 i(
b10 h(
00
b10 1
b10 d(
b0 *
b0 +
1"
#80000
0"
#85000
b1 *
b1 +
1"
#90000
0"
#95000
10
b10 *
b10 +
1"
#100000
0"
#105000
b1000 e(
b1000 i(
b11 h(
00
b11 1
b11 d(
b0 *
b0 +
1"
#110000
0"
#115000
b1 *
b1 +
1"
#120000
0"
#125000
10
b10 *
b10 +
1"
#130000
0"
#135000
b10000 e(
b10000 i(
b100 h(
00
b100 1
b100 d(
b0 *
b0 +
1"
#140000
0"
#145000
b1 *
b1 +
1"
#150000
0"
#155000
10
b10 *
b10 +
1"
#160000
0"
#165000
b100000 e(
b100000 i(
b101 h(
00
b101 1
b101 d(
b0 *
b0 +
1"
#170000
0"
#175000
b1 *
b1 +
1"
#180000
0"
#185000
10
b10 *
b10 +
1"
#190000
0"
#195000
b1000000 e(
b1000000 i(
b110 h(
00
b110 1
b110 d(
b0 *
b0 +
1"
#200000
0"
#205000
b1 *
b1 +
1"
#210000
0"
#215000
10
b10 *
b10 +
1"
#220000
0"
#225000
b10000000 e(
b10000000 i(
b111 h(
00
b111 1
b111 d(
b0 *
b0 +
1"
#230000
0"
#235000
b1 *
b1 +
1"
#240000
0"
#245000
10
b10 *
b10 +
1"
#250000
0"
#255000
b1 e(
b1 i(
b0 h(
00
b0 1
b0 d(
b0 *
b0 +
1"
#260000
0"
#265000
b1 *
b1 +
1"
#270000
0"
#275000
10
b10 *
b10 +
1"
#280000
0"
#285000
b10 e(
b10 i(
b1 h(
00
b1 1
b1 d(
b0 *
b0 +
1"
#290000
0"
#295000
b1 *
b1 +
1"
#300000
0"
#305000
10
b10 *
b10 +
1"
#310000
0"
#315000
b100 e(
b100 i(
b10 h(
00
b10 1
b10 d(
b0 *
b0 +
1"
#320000
0"
#325000
b1 *
b1 +
1"
#330000
0"
#335000
10
b10 *
b10 +
1"
#340000
0"
#345000
b1000 e(
b1000 i(
b11 h(
00
b11 1
b11 d(
b0 *
b0 +
1"
#350000
0"
#355000
b1 *
b1 +
1"
#360000
0"
#365000
10
b10 *
b10 +
1"
#370000
0"
#375000
b10000 e(
b10000 i(
b100 h(
00
b100 1
b100 d(
b0 *
b0 +
1"
#380000
0"
#385000
b1 *
b1 +
1"
#390000
0"
#395000
10
b10 *
b10 +
1"
#400000
0"
#405000
b100000 e(
b100000 i(
b101 h(
00
b101 1
b101 d(
b0 *
b0 +
1"
#410000
0"
#415000
b1 *
b1 +
1"
#420000
0"
#425000
10
b10 *
b10 +
1"
#430000
0"
#435000
b1000000 e(
b1000000 i(
b110 h(
00
b110 1
b110 d(
b0 *
b0 +
1"
#440000
0"
#445000
b1 *
b1 +
1"
#450000
0"
#455000
10
b10 *
b10 +
1"
#460000
0"
#465000
b10000000 e(
b10000000 i(
b111 h(
00
b111 1
b111 d(
b0 *
b0 +
1"
#470000
0"
#475000
b1 *
b1 +
1"
#480000
0"
#485000
10
b10 *
b10 +
1"
#490000
0"
#495000
b1 e(
b1 i(
b0 h(
00
b0 1
b0 d(
b0 *
b0 +
1"
#500000
0"
#505000
b1 *
b1 +
1"
#510000
0"
#515000
10
b10 *
b10 +
1"
#520000
0"
#525000
b10 e(
b10 i(
b1 h(
00
b1 1
b1 d(
b0 *
b0 +
1"
#530000
0"
#535000
b1 *
b1 +
1"
#540000
0"
#545000
10
b10 *
b10 +
1"
#550000
0"
#555000
b100 e(
b100 i(
b10 h(
00
b10 1
b10 d(
b0 *
b0 +
1"
#560000
0"
#565000
b1 *
b1 +
1"
#570000
0"
#575000
10
b10 *
b10 +
1"
#580000
0"
#585000
b1000 e(
b1000 i(
b11 h(
00
b11 1
b11 d(
b0 *
b0 +
1"
#590000
0"
#595000
b1 *
b1 +
1"
#600000
0"
#605000
10
b10 *
b10 +
1"
#610000
0"
#615000
b10000 e(
b10000 i(
b100 h(
00
b100 1
b100 d(
b0 *
b0 +
1"
#620000
0"
#625000
b1 *
b1 +
1"
#630000
0"
#635000
10
b10 *
b10 +
1"
#640000
0"
#645000
b100000 e(
b100000 i(
b101 h(
00
b101 1
b101 d(
b0 *
b0 +
1"
#650000
0"
#655000
b1 *
b1 +
1"
#660000
0"
#665000
10
b10 *
b10 +
1"
#670000
0"
#675000
b1000000 e(
b1000000 i(
b110 h(
00
b110 1
b110 d(
b0 *
b0 +
1"
#680000
0"
#685000
b1 *
b1 +
1"
#690000
0"
#695000
10
b10 *
b10 +
1"
#700000
0"
#705000
b10000000 e(
b10000000 i(
b111 h(
00
b111 1
b111 d(
b0 *
b0 +
1"
#710000
0"
#715000
b1 *
b1 +
1"
#720000
0"
#725000
10
b10 *
b10 +
1"
#730000
0"
#735000
b1 e(
b1 i(
b0 h(
00
b0 1
b0 d(
b0 *
b0 +
1"
#740000
0"
#745000
b1 *
b1 +
1"
#750000
0"
#755000
10
b10 *
b10 +
1"
#760000
0"
#765000
b10 e(
b10 i(
b1 h(
00
b1 1
b1 d(
b0 *
b0 +
1"
#770000
0"
#775000
b1 *
b1 +
1"
#780000
0"
#785000
10
b10 *
b10 +
1"
#790000
0"
#795000
b100 e(
b100 i(
b10 h(
00
b10 1
b10 d(
b0 *
b0 +
1"
#800000
0"
#805000
b1 *
b1 +
1"
#810000
0"
#815000
10
b10 *
b10 +
1"
#820000
0"
#825000
b1000 e(
b1000 i(
b11 h(
00
b11 1
b11 d(
b0 *
b0 +
1"
#830000
0"
#835000
b1 *
b1 +
1"
#840000
0"
#845000
10
b10 *
b10 +
1"
#850000
0"
#855000
b10000 e(
b10000 i(
b100 h(
00
b100 1
b100 d(
b0 *
b0 +
1"
#860000
0"
#865000
b1 *
b1 +
1"
#870000
0"
#875000
10
b10 *
b10 +
1"
#880000
0"
#885000
b100000 e(
b100000 i(
b101 h(
00
b101 1
b101 d(
b0 *
b0 +
1"
#890000
0"
#895000
b1 *
b1 +
1"
#900000
0"
#905000
10
b10 *
b10 +
1"
#910000
0"
#915000
b1000000 e(
b1000000 i(
b110 h(
00
b110 1
b110 d(
b0 *
b0 +
1"
#920000
0"
#925000
b1 *
b1 +
1"
#930000
0"
#935000
10
b10 *
b10 +
1"
#940000
0"
#945000
b10000000 e(
b10000000 i(
b111 h(
00
b111 1
b111 d(
b0 *
b0 +
1"
#950000
0"
#955000
b1 *
b1 +
1"
#960000
0"
#965000
10
b10 *
b10 +
1"
#970000
0"
#975000
b1 e(
b1 i(
b0 h(
00
b0 1
b0 d(
b0 *
b0 +
1"
#980000
0"
#985000
b1 *
b1 +
1"
#990000
0"
#995000
10
b10 *
b10 +
1"
#1000000
0"
#1005000
b10 e(
b10 i(
b1 h(
00
b1 1
b1 d(
b0 *
b0 +
1"
#1010000
0"
#1015000
b1 *
b1 +
1"
